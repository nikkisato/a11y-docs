"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[184],{"./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{a:()=>stegaEncodeSourceMap$1,e:()=>encodeIntoResult,s:()=>stegaEncodeSourceMap});var _browserMiddleware_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@sanity/client/dist/_chunks-es/browserMiddleware.js");const reKeySegment=/_key\s*==\s*['"](.*)['"]/;function toString(path){if(!Array.isArray(path))throw new Error("Path is not an array");return path.reduce(((target,segment,i)=>{const segmentType=typeof segment;if("number"===segmentType)return`${target}[${segment}]`;if("string"===segmentType)return`${target}${0===i?"":"."}${segment}`;if(function isKeySegment(segment){return"string"==typeof segment?reKeySegment.test(segment.trim()):"object"==typeof segment&&"_key"in segment}(segment)&&segment._key)return`${target}[_key=="${segment._key}"]`;if(Array.isArray(segment)){const[from,to]=segment;return`${target}[${from}:${to}]`}throw new Error(`Unsupported path segment \`${JSON.stringify(segment)}\``)}),"")}const ESCAPE={"\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","'":"\\'","\\":"\\\\"},UNESCAPE={"\\f":"\f","\\n":"\n","\\r":"\r","\\t":"\t","\\'":"'","\\\\":"\\"};function parseJsonPath(path){const parsed=[],parseRe=/\['(.*?)'\]|\[(\d+)\]|\[\?\(@\._key=='(.*?)'\)\]/g;let match;for(;null!==(match=parseRe.exec(path));)if(void 0===match[1])if(void 0===match[2])if(void 0===match[3]);else{const _key=match[3].replace(/\\(\\')/g,(m=>UNESCAPE[m]));parsed.push({_key,_index:-1})}else parsed.push(parseInt(match[2],10));else{const key=match[1].replace(/\\(\\|f|n|r|t|')/g,(m=>UNESCAPE[m]));parsed.push(key)}return parsed}function jsonPathToStudioPath(path){return path.map((segment=>{if("string"==typeof segment||"number"==typeof segment)return segment;if(""!==segment._key)return{_key:segment._key};if(-1!==segment._index)return segment._index;throw new Error(`invalid segment:${JSON.stringify(segment)}`)}))}function resolveMapping(resultPath,csm){if(null==csm||!csm.mappings)return;const resultMappingPath=function jsonPath(path){return`$${path.map((segment=>"string"==typeof segment?`['${segment.replace(/[\f\n\r\t'\\]/g,(match=>ESCAPE[match]))}']`:"number"==typeof segment?`[${segment}]`:""!==segment._key?`[?(@._key=='${segment._key.replace(/['\\]/g,(match=>ESCAPE[match]))}')]`:`[${segment._index}]`)).join("")}`}(function jsonPathToMappingPath(path){return path.map((segment=>{if("string"==typeof segment||"number"==typeof segment)return segment;if(-1!==segment._index)return segment._index;throw new Error(`invalid segment:${JSON.stringify(segment)}`)}))}(resultPath));if(void 0!==csm.mappings[resultMappingPath])return{mapping:csm.mappings[resultMappingPath],matchedPath:resultMappingPath,pathSuffix:""};const mappings=Object.entries(csm.mappings).filter((([key])=>resultMappingPath.startsWith(key))).sort((([key1],[key2])=>key2.length-key1.length));if(0==mappings.length)return;const[matchedPath,mapping]=mappings[0];return{mapping,matchedPath,pathSuffix:resultMappingPath.substring(matchedPath.length)}}function isRecord(value){return"object"==typeof value&&null!==value}function walkMap(value,mappingFn,path=[]){return function isArray(value){return null!==value&&Array.isArray(value)}(value)?value.map(((v,idx)=>{if(isRecord(v)){const _key=v._key;if("string"==typeof _key)return walkMap(v,mappingFn,path.concat({_key,_index:idx}))}return walkMap(v,mappingFn,path.concat(idx))})):isRecord(value)?Object.fromEntries(Object.entries(value).map((([k,v])=>[k,walkMap(v,mappingFn,path.concat(k))]))):mappingFn(value,path)}function encodeIntoResult(result,csm,encoder){return walkMap(result,((value,path)=>{if("string"!=typeof value)return value;const resolveMappingResult=resolveMapping(path,csm);if(!resolveMappingResult)return value;const{mapping,matchedPath}=resolveMappingResult;if("value"!==mapping.type||"documentValue"!==mapping.source.type)return value;const sourceDocument=csm.documents[mapping.source.document],sourcePath=csm.paths[mapping.source.path],matchPathSegments=parseJsonPath(matchedPath),fullSourceSegments=parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));return encoder({sourcePath:fullSourceSegments,sourceDocument,resultPath:path,value})}))}const DRAFTS_PREFIX="drafts.";function createEditUrl(options){const{baseUrl,workspace:_workspace="default",tool:_tool="default",id:_id,type,path,projectId,dataset}=options;if(!baseUrl)throw new Error("baseUrl is required");if(!path)throw new Error("path is required");if(!_id)throw new Error("id is required");if("/"!==baseUrl&&baseUrl.endsWith("/"))throw new Error("baseUrl must not end with a slash");const workspace="default"===_workspace?void 0:_workspace,tool="default"===_tool?void 0:_tool,id=function getPublishedId(id){return id.startsWith(DRAFTS_PREFIX)?id.slice(DRAFTS_PREFIX.length):id}(_id),stringifiedPath=Array.isArray(path)?toString(jsonPathToStudioPath(path)):path,searchParams=new URLSearchParams({baseUrl,id,type,path:stringifiedPath});workspace&&searchParams.set("workspace",workspace),tool&&searchParams.set("tool",tool),projectId&&searchParams.set("projectId",projectId),dataset&&searchParams.set("dataset",dataset),_id.startsWith(DRAFTS_PREFIX)&&searchParams.set("isDraft","");const segments=["/"===baseUrl?"":baseUrl];workspace&&segments.push(workspace);const routerParams=["mode=presentation",`id=${id}`,`type=${type}`,`path=${encodeURIComponent(stringifiedPath)}`];return tool&&routerParams.push(`tool=${tool}`),segments.push("intent","edit",`${routerParams.join(";")}?${searchParams}`),segments.join("/")}const filterDefault=({sourcePath,value})=>{if(function isValidDate(dateString){return!!/^\d{4}-\d{2}-\d{2}/.test(dateString)&&!!Date.parse(dateString)}(value)||function isValidURL(url){try{new URL(url,url.startsWith("/")?"https://acme.com":void 0)}catch{return!1}return!0}(value))return!1;const endPath=sourcePath.at(-1);return!("slug"===sourcePath.at(-2)&&"current"===endPath||"string"==typeof endPath&&endPath.startsWith("_")||"number"==typeof endPath&&"marks"===sourcePath.at(-2)||"href"===endPath&&"number"==typeof sourcePath.at(-2)&&"markDefs"===sourcePath.at(-3)||"style"===endPath||"listItem"===endPath||sourcePath.some((path=>"meta"===path||"metadata"===path||"openGraph"===path||"seo"===path))||"string"==typeof endPath&&denylist.has(endPath))},denylist=new Set(["color","colour","currency","email","format","gid","hex","href","hsl","hsla","icon","id","index","key","language","layout","link","linkAction","locale","lqip","page","path","ref","rgb","rgba","route","secret","slug","status","tag","template","theme","type","unit","url","username","variant","website"]);const TRUNCATE_LENGTH=20;function stegaEncodeSourceMap(result,resultSourceMap,config){var _a,_b,_c,_d,_e,_f,_g,_h,_i;const{filter,logger,enabled}=config;if(!enabled){const msg="config.enabled must be true, don't call this function otherwise";throw null==(_a=null==logger?void 0:logger.error)||_a.call(logger,`[@sanity/client]: ${msg}`,{result,resultSourceMap,config}),new TypeError(msg)}if(!resultSourceMap)return null==(_b=null==logger?void 0:logger.error)||_b.call(logger,"[@sanity/client]: Missing Content Source Map from response body",{result,resultSourceMap,config}),result;if(!config.studioUrl){const msg="config.studioUrl must be defined";throw null==(_c=null==logger?void 0:logger.error)||_c.call(logger,`[@sanity/client]: ${msg}`,{result,resultSourceMap,config}),new TypeError(msg)}const report={encoded:[],skipped:[]},resultWithStega=encodeIntoResult(result,resultSourceMap,(({sourcePath,sourceDocument,resultPath,value})=>{if(!1===("function"==typeof filter?filter({sourcePath,resultPath,filterDefault,sourceDocument,value}):filterDefault({sourcePath,resultPath,filterDefault,sourceDocument,value})))return logger&&report.skipped.push({path:prettyPathForLogging(sourcePath),value:`${value.slice(0,TRUNCATE_LENGTH)}${value.length>TRUNCATE_LENGTH?"...":""}`,length:value.length}),value;logger&&report.encoded.push({path:prettyPathForLogging(sourcePath),value:`${value.slice(0,TRUNCATE_LENGTH)}${value.length>TRUNCATE_LENGTH?"...":""}`,length:value.length});const{baseUrl,workspace,tool}=function resolveStudioBaseRoute(studioUrl){let baseUrl="string"==typeof studioUrl?studioUrl:studioUrl.baseUrl;return"/"!==baseUrl&&(baseUrl=baseUrl.replace(/\/$/,"")),"string"==typeof studioUrl?{baseUrl}:{...studioUrl,baseUrl}}("function"==typeof config.studioUrl?config.studioUrl(sourceDocument):config.studioUrl);if(!baseUrl)return value;const{_id:id,_type:type,_projectId:projectId,_dataset:dataset}=sourceDocument;return(0,_browserMiddleware_js__WEBPACK_IMPORTED_MODULE_0__.g)(value,{origin:"sanity.io",href:createEditUrl({baseUrl,workspace,tool,id,type,path:sourcePath,...!config.omitCrossDatasetReferenceData&&{dataset,projectId}})},!1)}));if(logger){const isSkipping=report.skipped.length,isEncoding=report.encoded.length;if((isSkipping||isEncoding)&&(null==(_d=(null==logger?void 0:logger.groupCollapsed)||logger.log)||_d("[@sanity/client]: Encoding source map into result"),null==(_e=logger.log)||_e.call(logger,`[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`)),report.encoded.length>0&&(null==(_f=null==logger?void 0:logger.log)||_f.call(logger,"[@sanity/client]: Table of encoded paths"),null==(_g=(null==logger?void 0:logger.table)||logger.log)||_g(report.encoded)),report.skipped.length>0){const skipped=new Set;for(const{path}of report.skipped)skipped.add(path.replace(reKeySegment,"0").replace(/\[\d+\]/g,"[]"));null==(_h=null==logger?void 0:logger.log)||_h.call(logger,"[@sanity/client]: List of skipped paths",[...skipped.values()])}(isSkipping||isEncoding)&&(null==(_i=null==logger?void 0:logger.groupEnd)||_i.call(logger))}return resultWithStega}function prettyPathForLogging(path){return toString(jsonPathToStudioPath(path))}var stegaEncodeSourceMap$1=Object.freeze({__proto__:null,stegaEncodeSourceMap})}}]);